{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","prevProps","this","props","name","today","console","info","debug","className","Component","getRandomName","value","Date","now","toString","slice","App","state","hasClock","clockName","toUTCString","timer","timerId","window","setInterval","setState","document","addEventListener","event","preventDefault","clearInterval","ReactDOM","render","getElementById"],"mappings":"6MAQaA,EAAb,wKACE,SAAmBC,GACjB,MAAwBC,KAAKC,MAArBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdC,QAAQC,KAAKF,GAETD,IAASH,EAAUG,MACrBE,QAAQE,MAAR,uBAA8BP,EAAUG,KAAxC,eAAmDA,MAPzD,oBAWE,WACE,MAAwBF,KAAKC,MAArBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OACE,sBAAKI,UAAU,MAAf,UACE,6CAEA,sBAAKA,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGJ,cA1Bb,GAA2BK,aCH3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GASX,IAAMK,EAAb,4MACEC,MAAyB,CACvBC,UAAU,EACVC,UAAW,UACXf,OAAO,IAAIQ,MAAOQ,cAAcL,OAAO,IAAK,IAJhD,EAOEM,MAAQ,EAPV,EASEC,QAAU,EATZ,uDAWE,WAAqB,IAAD,OAClBrB,KAAKoB,MAAQE,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAErB,OAAO,IAAIQ,MAAOQ,cAAcL,OAAO,IAAK,OAC3D,KAEHd,KAAKqB,QAAUC,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,UAAWT,QAC1B,MAEHgB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKJ,SAAS,CAAEP,UAAU,OAG5BQ,SAASC,iBAAiB,SAAS,WACjC,EAAKF,SAAS,CAAEP,UAAU,SA3BhC,kCA+BE,WACEY,cAAc7B,KAAKoB,OACnBS,cAAc7B,KAAKqB,WAjCvB,oBAoCE,WACE,MAAuCrB,KAAKgB,MAApCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWf,EAA7B,EAA6BA,MAE7B,OACE,mCACGc,GAAY,cAAC,EAAD,CAAOf,KAAMgB,EAAWf,MAAOA,UAzCpD,GAAyBK,aCdzBsB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.7f3c9794.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  name: string;\n  today: string;\n};\n\nexport class Clock extends Component<Props, {}> {\n  componentDidUpdate(prevProps: Props) {\n    const { name, today } = this.props;\n\n    console.info(today);\n\n    if (name !== prevProps.name) {\n      console.debug(`Renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  render() {\n    const { name, today } = this.props;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <div className=\"Clock\">\n          <strong className=\"Clock__name\">\n            {name}\n          </strong>\n\n          {' time is '}\n\n          <span className=\"Clock__time\">\n            {today}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n  today: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    today: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timer = 0;\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timer = window.setInterval(() => {\n      this.setState({ today: new Date().toUTCString().slice(-12, -4) });\n    }, 1000);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName, today } = this.state;\n\n    return (\n      <>\n        {hasClock && <Clock name={clockName} today={today} />}\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}